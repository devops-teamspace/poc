# -- Override the name
nameOverride: ""
# -- Override the fullname
fullnameOverride: ""
# -- Replicas for the deployment
replicaCount: 1
image:
    # -- Image repository used by deployment
    repository: quay.io/promhippie/github-exporter
    # -- Optional tag for the repository, defaults to app version
    tag: ""
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Optional name of pull secret if using a private registry
    pullSecrets: []
serviceAccount:
    # -- Create a new service account
    create: true
    # -- Optional name for an existing service account
    name: github-exporter
# -- Define additional labels
labels: {}
# -- Define additional annotations
annotations: {}
# -- Security context for the deployment
securityContext:
    fsGroup: 10000
# -- Security context for the pod
podSecurityContext:
    runAsGroup: 10000
    runAsUser: 10000
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
        drop:
            - all
service:
    # -- Type of the service
    type: ClusterIP
    # -- Port of the service
    port: 9504
    # -- Internal port of the service
    internalPort: 9504
    # -- Additional annotations for the service
    annotations: {}
    # prometheus.io/path: /metrics
    # prometheus.io/port: "9504"
    # prometheus.io/scrape: "true"
    # -- Additional labels for the service
    labels: {}
ingress:
    # -- Enable ingress
    enabled: false
    # -- (string) Class name for the ingress resource
    className: alb
    # -- Host definition for ingress
    hosts:
        - host: github-exporter.dev.xrspace.io
          paths:
            - path: /
              pathType: Prefix
    # -- Optional TLS configuration for ingress
    tls: []
    # -- Additional annotations for the ingress
    annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/healthcheck-path: /metrics
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:511635964514:certificate/32d5c63f-c780-4d28-b29e-716af5abb043
        alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01
        alb.ingress.kubernetes.io/group.name: xrworldgroup
    #   alb.ingress.kubernetes.io/certificate-arn: {{ .Values.release.certificateARN }}
    # -- Additional labels for the ingress
    labels: {}
persistence:
    # -- Enable persistence for the exporter
    enabled: false
    # -- Size for the exporter volume
    size: 1G
    # -- Storage class used for the exporter volume
    storageClass: null
    # -- Access modes used for the exporter volume
    accessModes:
        - ReadWriteOnce
    # -- Name of an already existing claim
    existingClaim: null
    # -- Path to mount the exporter volume
    mountPath: /var/lib/exporter
# -- Resources for the deployment
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi
# -- Node selector for the deployment
nodeSelector: {}
# -- Affinity for the deployment
affinity: {}
# -- Tolerations for the deployment
tolerations: []
serviceMonitor:
    # -- Enable service monitor integration
    enabled: true
    # -- Namespace used by service monitor
    namespace: ""
    # -- Additional labels for the service monitor
    labels: {}
    # -- Scrape interval
    interval: 30s
    # -- Scrape path
    telemetryPath: /metrics
    # -- Scrape timeout
    timeout: 30s
    # -- Metric relabeling configuration
    metricRelabelings: []
    # -- Relabeling configuration
    relabelings: []
    # -- Target labels
    targetLabels: []
    # -- Optionally override the job label
    jobLabel: []
prometheusRule:
    # -- Enable custom prometheus rules
    enabled: false
    # -- Namespace used by prometheus rules
    namespace: ""
    # -- Additional labels for prometheus rules
    additionalLabels: {}
    # -- Rules definition
    rules: []
# -- environment variables from existing secret
envFromSecret: ""
# -- Environment variables from existing configmap
envFromConfigMap: ""
# -- Extra environment variables from mapping
extraEnvVariables: {}
# GITHUB_EXPORTER_WORKFLOWS_LABELS: workflow,event,name,status,branch,number,run
# GITHUB_EXPORTER_TOKEN: "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"
# GITHUB_EXPORTER_LOG_PRETTY: true
# GITHUB_EXPORTER_ORG: XRSPACE-Inc
# GITHUB_EXPORTER_REPO: jamesxrspace/POC
# GITHUB_EXPORTER_WEB_CONFIG: /etc/github-exporter-files/web_config.yaml
# -- Extra environment variables from secrets
extraEnvSecrets: {}
# -- List of extra init containers
extraInitContainers: []
# -- List of extra volumes
extraVolumes: []
# -- List of extra volume mounts
extraVolumeMounts: []
# -- List of files written to a configmap and mounted to /etc/github-exporter-files
files: {}
# web_config.yaml: |
#   basic_auth_users:
#     example: $2y$05$a.7HgF3w3/V7kXRx9XNK9.klJbvALBvtACWdFTQ6VsC/diXVqToMW
config:
    # -- Authentication mode, could be `token` or `app`
    authType: token
    # -- (string) Access token for GitHub
    token: ~
    # -- Key used within secret for token
    tokenKey: token
    # -- (number) App ID used for GitHub app
    appId: 726810
    # -- Key used within secret for appId
    appIdKey: appId
    # -- (number) Installation ID used for GitHub app
    installationId: 45330766
    # -- Key used within secret for installationId
    installationIdKey: installationId
    # -- (string) Private key in base64 encoded format
    privateKey: null
    # -- Key used within secret for privateKey
    privateKeyKey: privateKey
    # -- (string) Existing secret to use for credentials
    existingSecret: null
# existingSecret: github-exporter
webhook:
    # -- Enable webhook secret integration
    enabled: true
    # -- (string) Secret for webhook authentication
    secret: NPh2x7CwvB2ZW_C
    # -- Key used within secret for webhook
    secretKey: secret
    # -- (string) Existing secret to use for credentials
    existingSecret: null
    # existingSecret: github-exporter-webhook
    # -- (string) Path for webhook endpoint
    path: /github
database:
    # -- Enable database secret integration
    enabled: false
    # -- (string) DSN for used database and credentials
    dsn: sqlite:///var/lib/exporter/database.sqlite3
    # -- Key used within secret for webhook
    dsnKey: dsn
    # -- (string) Existing secret to use for credentials
    existingSecret: null
exporter:
    # -- (string) Enterprises to scrape metrics from
    enterprises: null
    # -- (string) Organizations to scrape metrics from
    orgs: devops-teamspace
    # -- (string) Repositories to scrape metrics from
    repos: null
# repos: [ "devops-teamspace/poc","devops-teamspace/starter-workflows" ] 
collector:
    # -- Enable collector for admin
    admin: false
    # -- Enable collector for orgs
    orgs: true
    # -- Enable collector for repos
    repos: true
    # -- Enable collector for billing
    billing: true
    # -- Enable collector for runners
    runners: true
    # -- Enable collector for workflows
    workflows: true
workflow:
    # -- List of labels assigned for workflow metrics
    labels: []
    # -- (string) Duration to keep workflow metrics
    window: 24h
